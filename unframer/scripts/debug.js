// Generated by Framer (7435d2a)
import {
    addPropertyControls as e,
    ControlType as t,
    QueryEngine as l,
} from 'framer'
import { DatabaseCollection as i } from './pRkZD_P47-0.js'
import { resolveRichText as a } from './pRkZD_P47-1.js'
let r = {
        eTZaEdgHu: {
            definition: { isNullable: !0, type: t.String },
            isNullable: !0,
            type: t.Array,
        },
        fKUeAkClm: { isNullable: !0, type: t.String },
        FO4OLDV1J: { isNullable: !0, type: t.String },
        id: { isNullable: !1, type: t.String },
        jck3KwWdW: { isNullable: !0, type: t.Date },
        nextItemId: { isNullable: !0, type: t.String },
        oy4qcjMZ5: { isNullable: !0, type: t.ResponsiveImage },
        previousItemId: { isNullable: !0, type: t.String },
        qdyvldb6t: { isNullable: !0, type: t.RichText },
    },
    o = new l(),
    n = {
        collectionByLocaleId: {
            default: new i({
                chunks: [
                    new URL(
                        './pRkZD_P47-chunk-default-0.framercms',
                        import.meta.url,
                    ).href,
                ],
                compressionDictionary: new URL(
                    './pRkZD_P47-chunk-default-dict.framercms',
                    import.meta.url,
                ).href,
                indexes: [],
                resolveRichText: a,
                schema: r,
            }),
        },
        displayName: 'Articles',
    }
export default n
e(n, {
    FO4OLDV1J: { defaultValue: '', title: 'Title', type: t.String },
    fKUeAkClm: { title: 'Slug', type: t.String },
    jck3KwWdW: { defaultValue: '', title: 'Date', type: t.Date },
    oy4qcjMZ5: { title: 'Image', type: t.ResponsiveImage },
    eTZaEdgHu: {
        dataIdentifier: 'local-module:collection/UU2V0Z7Wd:default',
        defaultValue: [],
        title: 'Categories',
        type: t.MultiCollectionReference,
    },
    qdyvldb6t: { defaultValue: '', title: 'Content', type: t.RichText },
    previousItemId: {
        dataIdentifier: 'local-module:collection/pRkZD_P47:default',
        title: 'Previous',
        type: t.CollectionReference,
    },
    nextItemId: {
        dataIdentifier: 'local-module:collection/pRkZD_P47:default',
        title: 'Next',
        type: t.CollectionReference,
    },
})
export const enumToDisplayNameFunctions = {}
export const utils = {
    async getSlugByRecordId(e, t) {
        let [l] = await o.query(
            {
                from: { data: n, type: 'Collection' },
                limit: { type: 'LiteralValue', value: 1 },
                select: [{ name: 'fKUeAkClm', type: 'Identifier' }],
                where: {
                    left: { name: 'id', type: 'Identifier' },
                    operator: '==',
                    right: { type: 'LiteralValue', value: e },
                    type: 'BinaryOperation',
                },
            },
            t,
        )
        return l?.fKUeAkClm
    },
    async getRecordIdBySlug(e, t) {
        let [l] = await o.query(
            {
                from: { data: n, type: 'Collection' },
                limit: { type: 'LiteralValue', value: 1 },
                select: [{ name: 'id', type: 'Identifier' }],
                where: {
                    left: { name: 'fKUeAkClm', type: 'Identifier' },
                    operator: '==',
                    right: { type: 'LiteralValue', value: e },
                    type: 'BinaryOperation',
                },
            },
            t,
        )
        return l?.id
    },
}
export const __FramerMetadata__ = {
    exports: {
        enumToDisplayNameFunctions: {
            type: 'variable',
            annotations: { framerContractVersion: '1' },
        },
        default: {
            type: 'data',
            name: 'data',
            annotations: {
                framerSlug: 'fKUeAkClm',
                framerCollectionId: 'pRkZD_P47',
                framerData: '',
                framerCollectionUtils: '1',
                framerEnumToDisplayNameUtils: '2',
                framerRecordIdKey: 'id',
                framerContractVersion: '1',
            },
        },
        utils: {
            type: 'variable',
            annotations: { framerContractVersion: '1' },
        },
        __FramerMetadata__: { type: 'variable' },
    },
}
